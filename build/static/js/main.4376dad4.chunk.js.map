{"version":3,"sources":["Images/Infosys.jpg","Images/workspaces.jpg","Images/user.jpg","Images/Labs.jpg","Images/oxford.jpg","Images/station.jpg","logo.svg","MyFirstComponent/Welcome.js","componenets/Message.js","componenets/Counter.js","componenets/ClassComponentLifeCycle.js","MyFirstComponent/WelcomeFunctional.js","Cards/CardsUI.jsx","App.js","Cards/cards.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buttonclickHandler","console","log","react_default","a","createElement","type","class","onClick","WelcomeFunctional","Card","props","className","src","imgsrc","alt","App","require","MyFirstComponent_Welcome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+MC2BzBC,eCdQC,YCDDA,YCTMA,8BHI1B,SAAAD,IAAa,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACTE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAGJI,mBAAqB,WACpBC,QAAQC,IAAI,sBALAT,wEAST,OACIU,EAAAC,EAAAC,cAAA,qDAECF,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,MAAM,oBAAqBC,QAASZ,KAAKI,oBAA/D,kBAdWR,oBIMPiB,ICKAC,EAZF,SAAAC,GACZ,OACER,EAAAC,EAAAC,cAAA,OAAKO,UAAU,2BACZT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACXT,EAAAC,EAAAC,cAAA,OAAKQ,IAAKF,EAAMG,OAAQC,IAAI,UAAUH,UAAU,sHCqC3CI,SCnCKxB,wBDSFyB,EAAQ,qLAMtB,OACEd,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OAWfT,EAAAC,EAAAC,cAACa,EAAD,cAdY1B,cEXE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4376dad4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Infosys.ee2b7524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/workspaces.d2282889.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user.d6bf85eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Labs.3b686e70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oxford.47563d54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/station.0a53c13b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport {Button} from 'bootstrap';\n\n\n\nclass Welcome extends Component {\n\n  constructor(){\n      super()\n  }\n\n  buttonclickHandler = () => {\n   console.log('button is clicked')\n  }\n\n  render(){\n      return (\n          <div>\n           This is my firts react class component.\n           <button type=\"button\" class=\"btn btn-secondary\"  onClick={this.buttonclickHandler} > dsdsd</button>\n\n          </div>\n      )\n  }\n\n}\n\nexport default Welcome;\n\n\n\n\n","import React, { Component } from 'react'\n\n/*This component has been created to demonstarte the state object of an Component.\nA state is an private object which a given component maintains to come out \nthe demrits of props object which is immutatable.\n\nSate can be changed within the component .\n\nsetState set the new state object in the component .\n\n*/\n\n\nclass Message  extends Component {\n\nconstructor(){\n    super()\n    this.state = {\n        message : 'Welcome Visitor'\n    }\n}\n\nchnageMessage(){\n    this.setState({\n        message : 'Thanks for Subscribing'\n\n    })\n}\n\n\nrender(){\n    return (\n     <div> \n    <h1>{this.state.message}</h1>\n    <button onClick = {() => this.chnageMessage()}>subscriber</button>\n    </div>\n    )\n  }\n}\n\nexport default Message;","import React , {Component} from 'react'\n\n\n/*\nAlways make use of setState and never moficy the state direclty\n\nWhenever any code needs to be executed on the state of the Object place that code on the callback function which is second \nargument of setState .\n\n\n*/\n\nclass Counter extends Component{\n\n    constructor(props){\n       super(props)\n       this.state = {\n           count : 0\n       }\n    }\n\n    incremental(){\n\n        this.state.\n\n     this.setState({\n       count : this.state.count + 1  \n     },()=> {console.log('console log',this.state.count)})\n     console.log(this.state.count)\n    }\n\n\n\n\nrender(){\nreturn(\n<div>\n<div>count - {this.state.count}</div>\n<button onClick={()=>this.incremental()}>clickMe</button>\n </div>\n)\n}\n}\n\n\nexport default Counter","import React , {Component} from 'react';\n\n\nclass LifeCycleDemo extends Component{\n\n// \n constructor(){\n     super()\n     this.state = {\n        count : 0\n    }\n }\n\n componentDidMount(){\n     // your project requirement \n     console.log('componentDidMount is called after component has beedn added to DOM');\n }\n\n componentWillMount(){\n     // your project reuirement\n   console.log('componentWillMount is called before component is being added to DOM');\n }\n\ncomponentDidUpdate(){\n    // your project requirement\n    console.log('componentDidUpdate is called when the component is being updated by change of state and props');\n}\n\ncomponentWillReceiveProps(){\n    console.log('componentWillReceiveProps is called')\n}\n\ncomponentWillUnmount(){\n    console.log('component is unmounted');\n}\n\nincremental(){\n\n this.setState({\n   count : this.state.count + 1  \n },()=> {console.log('console log',this.state.count)})\n console.log(this.state.count)\n \n\n}\n\n\n // renders\n render(){\n    return(\n    <div>\n    \n    {console.log('component loaded')}\n    <div>Well a Life cycle method demo of class component</div>\n    <div>count - {this.state.count}</div>\n    <div>props is being passed as {this.props.name}</div>\n<button onClick={()=>this.incremental()}>clickMe</button>\n     </div>\n    )\n    }\n\n}\n\nexport default  LifeCycleDemo;","import React from 'react'\n\nfunction WelcomeFunctional() {\n \n    return(\n        <div>hello world from a functional react component</div>\n    )\n\n}\n\n\nexport default WelcomeFunctional;","import React from 'react';\n//import img1 from '../../src/Images/Infosys.jpg'\nimport './card-style.css'\n\nconst Card = props => {\n return(\n   <div className=\"card text-center shadow\"> \n      <div className=\"overflow\">\n          <img src={props.imgsrc} alt='Image 1' className=\"card-img-top\" />\n      </div>\n   </div>  \n\n\n );\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Greet from './componenets/Greet';\n\nimport Hello from './componenets/Hello';\nimport Message from './componenets/Message';\nimport Counter from './componenets/Counter';\nimport functionClick from './componenets/functionClick';\nimport LifeCycleDemo from './componenets/ClassComponentLifeCycle'\n\nimport Welcome from  './MyFirstComponent/Welcome';\nimport WelcomeFunctional from './MyFirstComponent/WelcomeFunctional';\n\n\nimport Cards from './Cards/cards';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\n//import 'owl.carousel';\nimport $ from 'jquery';\nconst bootstrap = require('bootstrap');\n\n \n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      {/*<functionClick /> */}\n      {/*<Counter /> \n       */}\n      {/* <Greet name=\"samir\" heroName=\"superMan\" />  \n        <Greet name=\"Diana\">\n        <button>action</button>\n        </Greet> \n        <Welcome name=\"samir\" heroName=\"superMan\" ></Welcome> \n      LifeCycleDemo /> */}\n\n      <Welcome/>\n      \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport Card from './CardsUI';\nimport img1 from '../../src/Images/Infosys.jpg'\nimport img2 from '../../src/Images/oxford.jpg'\nimport img3 from '../../src/Images/user.jpg'\nimport img4 from '../../src/Images/workspaces.jpg'\nimport img5 from '../../src/Images/Labs.jpg'\nimport img6 from '../../src/Images/station.jpg'\nimport './line.css'\n\nclass Cards extends Component {\nrender(){\n    return(\n<div class=\"container-fluid\"> \n\n<div>\n   <h5 className=\"float-left myline\" >Your Workspaces</h5>\n</div>\n<div className=\"row-md-12\">\n \n<div id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\" data-interval=\"false\">\n\n<div className=\"carousel-inner\">\n\n<div className=\"carousel-item active\">\n<div className=\"container-fluid d-flex justify-content-center\">\n\n<div className=\"col-md-3\">\n<Card imgsrc={img1} title={\"workspaces\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img2} title={\"Code Lib\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img3} title={\"Admin\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img4} title={\"Admin\"}/>\n</div>\n\n</div>\n</div>\n\n\n<div className=\"carousel-item\">\n<div className=\"container-fluid d-flex justify-content-center\">\n\n<div className=\"col-md-3\">\n<Card imgsrc={img5} title={\"workspaces\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img4} title={\"Code Lib\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img3} title={\"Admin\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img1} title={\"Admin\"}/>\n</div>\n\n</div>\n</div>\n\n</div>\n\n\n<a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n<span class=\"carousel-control-prev-icon\"  aria-hidden=\"true\"></span>\n<span class=\"sr-only\">Previous</span>\n</a>\n\n<a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n<span class=\"sr-only\">Next</span>\n</a>\n\n</div>\n</div>\n\n<div>\n   <h5 className=\"float-left myline\" >You May also Like</h5>\n</div>\n\n\n<div className=\"row-md-12\">\n \n<div id=\"carouselExampleControls2\" class=\"carousel slide\" data-ride=\"carousel\" data-interval=\"false\">\n\n<div className=\"carousel-inner\">\n\n<div className=\"carousel-item active\">\n<div className=\"container-fluid d-flex justify-content-center\">\n\n<div className=\"col-md-3\">\n<Card imgsrc={img6} title={\"workspaces\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img4} title={\"Code Lib\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img1} title={\"Admin\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img5} title={\"Admin\"}/>\n</div>\n\n</div>\n</div>\n\n\n<div className=\"carousel-item\">\n<div className=\"container-fluid d-flex justify-content-center\">\n\n<div className=\"col-md-3\">\n<Card imgsrc={img5} title={\"workspaces\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img4} title={\"Code Lib\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img3} title={\"Admin\"}/>\n</div>\n\n<div className=\"col-md-3\">\n<Card imgsrc={img1} title={\"Admin\"}/>\n</div>\n\n</div>\n</div>\n\n</div>\n\n\n<a class=\"carousel-control-prev\" href=\"#carouselExampleControls2\" role=\"button\" data-slide=\"prev\">\n<span class=\"carousel-control-prev-icon\"  aria-hidden=\"true\"></span>\n<span class=\"sr-only\">Previous</span>\n</a>\n\n<a class=\"carousel-control-next\" href=\"#carouselExampleControls2\" role=\"button\" data-slide=\"next\">\n<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n<span class=\"sr-only\">Next</span>\n</a>\n\n</div>\n</div>\n\n</div>\n    );\n}\n\n}\n\nexport default Cards;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}